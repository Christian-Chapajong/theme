{# Extend page template #}
{% extends 'templates/page.twig' %}

{% set full_width = true %}
{% set title = 'Shopping Bag' %}
{% set hideTitle = true %}
{% set hideDesc = true %}


{% block page_content %}
    <div class="basket-header-container">
        {% if basket.errors.has_both_normal_and_subscription_products %}
            <div class="row column">
                <div class="basket-subscription-error">
                    <div class="inner">
                        {% include 'partials/warning_svg.twig' %}
                        <span>Your basket cannot contain both subscription and one-off products, please place separate orders to continue</span>
                    </div>
                </div>
            </div>
        {% endif %}
        <div class="row">
            <div class="column medium-6">
                <h1 class="regular-header">
                    {{ title }}
                </h1>
            </div>
            <div class="column medium-6 medium-text-right">
                <span class="basket-header-total">
                    <span class="basket-header-label">Total</span>
                    <strong class="basket-header-amount basket-total">{{ format_price(basket.total) }}</strong>
                </span>
            </div>
        </div>
    </div>
    <div class="basket-items-container">
        {# Render errors #}
        {{ theme.errors(errors) }}
        <div class="row column basket-items-inner">
            <form action="{{ global.current_url }}" method="post" class="basket-form">
                {# Render items table #}
                <table class="basket-table unstriped{{ basket.items ? '' : ' no-margin' }}" role="grid">
                    {% if basket.items %}
                        <tr class="basket-headings show-for-large">
                            <th colspan="2">Item ({{ basket.items|length }} item{{ basket.items|length != 1 ? 's' : '' }})</th>
                            <th>Quantity</th>
                            <th>Price</th>
                            <th>Subtotal</th>
                            <th>Remove</th>
                        </tr>
                    {% endif %}
                    {# Render items #}
                    {% for item in basket.items %}

                        {% set order_min = not global.features.extensions.min_max_quantity ? 0 : global.minimum_product_quantity > 0 ? global.minimum_product_quantity : item.product.minimum_order_quantity %}
                        {% set order_max = not global.features.extensions.min_max_quantity ? 0 : global.maximum_product_quantity > 0 ? global.maximum_product_quantity : item.product.maximum_order_quantity %}

                        <tr class="basket-item" data-min-quantity="{{ order_min }}" data-max-quantity="{{ order_max }}">
                            <td class="basket-item-image">
                                {% if item.is_gift_voucher %}
                                    <div class="image-container" data-fit="0">
                                        <img src="{{ item.product.photo_url }}" alt="gift voucher">
                                    </div>
                                {% else %}
                                    <a href="{{ item.product.url }}" class="image-container" data-fit="0">
                                        <img src="{{ item.product.photo_url }}" alt="{{ item.product.photo_description }}">
                                    </a>
                                {% endif %}
                            </td>
                            <td class="basket-item-info">
                                {# Render title #}
                                <h4 class="basket-item-title">
                                    {% if item.is_gift_voucher %}
                                        {{ item.product.title|raw }}
                                    {% else %}
                                        {{ item.product.title }}
                                    {% endif %}
                                </h4>
                                <div class="basket-item-options">
                                    {% for name, value in item.options %}
                                       <div>
                                           {{ name }}
                                           <strong>{{ theme.filter_hex(value) }}</strong>
                                       </div>
                                    {% endfor %}
                                    {% for choice in item.choices %}
                                        <div>
                                            {{ choice.value }}
                                            <strong>{{ format_price(choice.price) }}</strong>
                                       </div>
                                    {% endfor %}
                                    {% if item.comments|length %}
                                       {% set opts = item.comments|split('|') %}
                                       {% for option in opts %}
                                           {% set name = option|split(':')[0] %}
                                           {% set value = option|split(':')[1] %}
                                           <div>
                                               {{ name }}
                                               <strong>{{ value }}</strong>
                                           </div>
                                       {% endfor %}
                                    {% endif %}
                                    {% for extra in item.extras %}
                                       <div>
                                           {{ extra.name }}
                                           <strong>
                                               {{ format_price(extra.price) }}
                                           </strong>
                                       </div>
                                    {% endfor %}
                                    {# Render min max order values #}
                                    {% if order_min or order_max %}
                                       {% set order_qty = [] %}
                                       {% if order_min %}
                                           {% set order_qty = order_qty|merge(['Min ' ~ order_min]) %}
                                       {% endif %}
                                       {% if order_max %}
                                           {% set order_qty = order_qty|merge(['Max ' ~ order_max]) %}
                                       {% endif %}
                                       <p class="basket-item-options">
                                           ({{ order_qty|join(', ') }})
                                       </p>
                                    {% endif %}
                                </div>
                                {# render pre-order shipping date #}
                                {% if item.product.shipping_date %}
                                    <p class="basket-item-options">
                                        This product will be shipped on <strong>{{ item.product.shipping_date|date('jS F Y', 'Europe/London') }}</strong>
                                    </p>
                                {% endif %}
                                {% if not item.is_gift_voucher %}
                                    {# move to wishlist #}
                                    <a href="{{ item.remove_url }}&amp;add_to_wishlist=1" class="link-with-icon info-wishlist margin-top">
                                        {{ theme.sw_icon('heart') }}
                                        <span>move to wishlist</span>
                                    </a>
                                {% endif %}
                                {# Render labels #}
                                {% if item.product.three_for_two %}
                                    {{ theme.product_label('3 for 2') }}
                                {% elseif item.product.two_for_one %}
                                    {{ theme.product_label('2 for 1') }}
                                {% endif %}
                                {#Â Render product offers #}
                                {% for offer in item.offers %}
                                    <div class="product-offer">
                                        <div class="product-offer-title">
                                            {{ offer.title }}
                                        </div>
                                    </div>
                                {% endfor %}
                            </td>
                            <td class="basket-item-qty" data-label="Quantity">
                                <div class="quantity">
                                    {{ html.number_toggle('quantity[' ~ item.id ~ ']', item.quantity, 'basket-qty', '', '', '', '', '') }}
                                    <button class="basket-update" type="submit">
                                        Update
                                    </button>
                                </div>
                            </td>
                            <td class="basket-item-price show-for-large" data-label="Price">
                                <div class="price">
                                    {{ format_price(item.original_price) }}
                                </div>
                            </td>
                            <td class="basket-item-cost" data-label="Cost">
                                <div class="price">
                                    {{ format_price(item.original_price * item.quantity) }}
                                </div>
                            </td>
                            <td class="basket-item-remove">
                                <div class="remove">
                                    <a class="remove-button" href="{{ item.remove_url }}">Remove</a>
                                </div>
                            </td>
                        </tr>
                    {% else %}
                        <tr class="shadow-box">
                            <td>
                                <h2 class="subheader">
                                    {{ theme.text_snippet('empty_basket') }}
                                </h2>
                            </td>
                        </tr>
                    {% endfor %}
                </table>
            </form>
        </div>
    </div>
    <div class="basket-bottom-container">
        <div class="row">
            <div class="column large-5">
                {# voucher form #}
                <form action="{{ global.current_url }}" method="post" class="basket-voucher padding-bottom">
                    <div class="input-group mod-custom">
                        <input class="input-group-field" name="voucher_code" placeholder="Enter your voucher/promotion code" type="text" value="{{ basket.voucher_codes[0].code }}">
                        <div class="input-group-button">
                            <button type="submit" class="button">Apply</button>
                        </div>
                    </div>
                </form>
                {# reward points #}
                {% if basket.has_redeemed_points or basket.reward_points > 0 or basket.reward_points_earned > 0 %}
                    <div class="info-rewards-line mod-basket margin-top">
                        <p>
                            {% if basket.reward_points_earned %}
                                You will earn <span>{{ basket.reward_points_earned }}</span> reward points with this purchase.
                            {% endif %}
                            {% if basket.has_redeemed_points %}
                                A discount of <span>{{ format_price(basket.reward_points_discount) }}</span> has been applied. <a href="/checkout/basket/unconvert-reward-points">Cancel.</a>
                            {% elseif basket.reward_points > 0 %}
                                You have <span>{{ basket.reward_points }} reward point{{ basket.reward_points != 1 ? 's' : '' }}</span>.
                                {% if basket.can_redeem_points %}
                                    <a href="/checkout/basket/convert-reward-points">Redeem for a discount.</a>
                                {% endif %}
                            {% endif %}
                        </p>
                    </div>
                {% endif %}
            </div>
            <div class="column large-6 last">
                <form class="form-with-validation" action="/checkout/{{ global.theme.settings.force_login_at_checkout ? 'login' : 'address' }}" method="post" id="basket-form" data-radios="{{ gts.rates_as_radios }}">
                    {# basket totals #}
                    <div class="basket-box margin-bottom">
                        <table class="basket-totals unstriped">
                            <tbody>
                                <tr>
                                    <td>Subtotal</td>
                                    <td><span class="basket-sub-total">{{ format_price(basket.original_sub_total) }}</span></td>
                                </tr>
                            </tbody>
                        </table>
                        {# shipping fields #}
                        {% if basket.shipping_countries %}
                            <label>
                                <span class="field-label">Delivery Country</span>
                                <select name="countryId">
                                    <option value="">Please select...</option>
                                    {% if basket.shipping_countries|first is iterable %}
                                        {% for name, states in basket.shipping_countries %}
                                            <optgroup label="{{ name|default('Other Countries') }}">
                                                {% for state in states %}
                                                    <option value="{{ state.id }}"{% if state.current %} selected="selected"{% endif %}>
                                                        {{ state.name }}
                                                    </option>
                                                {% endfor %}
                                            </optgroup>
                                        {% endfor %}
                                    {% else %}
                                        {% for country in basket.shipping_countries %}
                                            <option value="{{ country.id }}"{% if country.current %} selected="selected"{% endif %}>
                                                {{ country.name }}
                                            </option>
                                        {% endfor %}
                                    {% endif %}
                                </select>
                            </label>
                            {% if global.features.extensions.postcode_shipping %}
                                {# postcode shipping input #}
                                <div class="postcode-container">
                                    <div class="input-group mod-custom mod-search">
                                        <input type="text" placeholder="Enter your postcode" class="postcode input-group-field required" value="{{ global.basket.postcode }}">
                                        <div class="input-group-button">
                                            <button type="button" class="button postcode-validate">
                                                Go
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            {% endif %}
                            {% if gts.rates_as_radios %}
                                {# Render rates as radio buttons #}
                                <fieldset name="rateId" class="rates rates-container">
                                    <legend class="field-label">Delivery Rate</legend>
                                    <div class="rateId margin-bottom">
                                        {% for rate in basket.shipping_rates %}
                                            <div class="row column">
                                                <input id="rate-{{ rate.id }}" type="radio" name="rateId" value="{{ rate.id }}" {% if rate.current %} checked="checked"{% endif %}>
                                                <label for="rate-{{ rate.id }}">
                                                    {{ rate.name }}
                                                    <span>
                                                        {{ format_price(rate.price) }}
                                                    </span>
                                                </label>
                                            </div>
                                        {% endfor %}
                                    </div>
                                </fieldset>
                            {% else %}
                                {# Render rate drop down #}
                                <div class="rates rates-container">
                                    <label>
                                        <span class="field-label">Delivery Rate</span>
                                        <select name="rateId">
                                            <option value="">Please select...</option>
                                            {% for rate in basket.shipping_rates %}
                                                <option value="{{ rate.id }}"{% if rate.current %} selected="selected"{% endif %}>
                                                    {{ rate.name }}
                                                    {{ format_price(rate.price) }}
                                                </option>
                                            {% endfor %}
                                        </select>
                                    </label>
                                </div>
                            {% endif %}
                            {# Render delivery date field #}
                            {% if gts.checkout_delivery_date %}
                                <div class="delivery-date-outer">
                                    <span class="field-label">Select a preferred date</span>
                                    <div class="delivery-date-container">
                                        <input type="text" name="delivery_date" value="{{ basket.delivery_date }}" readonly>
                                    </div>
                                </div>
                            {% endif %}
                        {% endif %}
                        <table class="basket-totals unstriped">
                            <tbody>
                                <tr>
                                    <td>Delivery</td>
                                    <td><span class="basket-delivery">{{ format_price(basket.original_shipping) }}</span></td>
                                </tr>
                                <tr>
                                    <td>
                                        Discount
                                        {% if basket.voucher_discount or basket.has_redeemed_points %}
                                            <a data-voucher="{{ basket.voucher_discount ? 1 : 0 }}" data-rewards="{{ basket.has_redeemed_points ? 1 : 0 }}" class="remove-voucher js-remove-discount text-underline" href="/checkout/basket/clear-vouchers">remove</a>
                                        {% endif %}
                                    </td>
                                    <td><span class="basket-discounts">{{ format_price(basket.discount) }}</span></td>
                                </tr>
                                <tr>
                                    <td>Total</td>
                                    <td><span class="basket-total">{{ format_price(basket.total) }}</span></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <br>
                    {# buttons #}
                    {% if not gts.checkout_disabled %}
                        {# Render checkout button #}
                        {{ html.button('', '', global.theme.settings.button_checkout, 'button basket-proceed-button large text-nocase expanded', '', '', '', '', 'button_checkout') }}

                        {% if basket.payment_methods|length %}
                            <p class="text-center basket-payment-button">
                                or
                            </p>
                            {% for payment_method in basket.payment_methods %}
                                <div class="text-center basket-payment-button">
                                    {% if payment_method.id == 33 or payment_method.id == 34 %}
                                        <button type="submit" name="{{ payment_method.field_name }}" value="1" class="image-button paypal-button">
                                            <span class="show-for-sr">Checkout with PayPal</span>
                                            <img src="https://www.paypalobjects.com/webstatic/en_US/i/btn/png/gold-rect-paypalcheckout-60px.png" alt="Check out with PayPal" width="170">
                                        </button>
                                    {% else %}
                                        <button type="submit" name="{{ payment_method.field_name }}" value="1" class="button large expanded">
                                            {{ payment_method.title }}
                                        </button>
                                    {% endif %}
                                </div>
                            {% endfor %}
                        {% endif %}
                    {% else %}
                        <p class="text-center">{{ theme.text_snippet('checkout_disable') }}</p>
                    {% endif %}
                </form>
            </div>
        </div>
    </div>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    {% if gts.checkout_delivery_date %}
        <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    {% endif %}
{% endblock %}

{% block scripts %}
    {{ parent() }}
    {% if basket.shipping_rates %}
        <script>
            $('[name="countryId"]').on('change', function() {
                var rateSelect = $(this),
                    matchText = 'click & collect',
                    text = rateSelect.find('option:selected').text(),
                    btnSelector = '.basket-payment-button';

                if (text.toLowerCase().indexOf(matchText) >= 0) {
                    // is C&C - hide basket payment methods
                    $(btnSelector).addClass('hide');
                }
                else {
                    // not C&C - show basket payment methods
                    $(btnSelector).removeClass('hide');
                }
            });
        </script>
    {% endif %}
    {% if gts.checkout_delivery_date %}

        {# convert date input #}
        {% set holidays_raw = global.theme.settings.checkout_delivery_holidays|replace({' ':''})|split(',') %}
        {% set hols_parsed = [] %}
        {% for date in holidays_raw %}
            {% set parsed = date|date('j-n-Y') %} {# format d-m-yy #}
            {% set hols_parsed = hols_parsed|merge([parsed]) %}
        {% endfor %}
        {% set lead = global.theme.settings.checkout_delivery_lead|default(1) %}
        {% set cutoff = global.theme.settings.checkout_delivery_cut_off|split(':')[0]|default(15) %}

        {#Â delivery date field #}
        {{ html.script('//cdn.jsdelivr.net/npm/jquery-ui-dist@1.12.1/jquery-ui.js') }}
        <script>
            function canDeliverOnDate(date) {
                var now = new Date();
                var day = date.getDay();

                return [(day != 0) && (!isTomorrow(date) || now.getHours() < 24), ''];
            }
            function isTomorrow(date) {
                var today = new Date();
                var tomorrow = new Date(today.getTime() + (24 * 60 * 60 * 1000));
                return date.toDateString() === tomorrow.toDateString();
            }
            $(function() {

                var country_select = $('select[name="countryId"]'),
                    picker_field = $('input[name="delivery_date"]'),
                    container = picker_field.closest('.delivery-date-outer');

                if(!picker_field.length){
                    return;
                }

                function init_date_picker() {

                    var now = new Date(),
                        hrs = now.getHours(),
                        zones = ['222', '241', '242', '243', '244', '254', '255'], // show for zones
                        field = $('.delivery-date-container'),
                        country = country_select.val(),
                        user_lead = {{ lead }},
                        user_cutoff = {{ cutoff }},
                        min_date = country == '222' && hrs < user_cutoff ? (1 + user_lead) : (2 + user_lead);     // allow next for UK (before 3pm)
                        days_array = [{{ global.theme.settings.checkout_delivery_days|raw }}],
                        holidays = {{ hols_parsed|json_encode()|raw }};

                    //console.log($.inArray(country, zones));
                    if(theme_config.debug){
                        console.log('holidays', holidays);
                    }

                    // toggle field for zones
                    if($.inArray(country, zones) !== -1) {
                        container.show();
                    }
                    else {
                        container.hide();
                    }

                    // call picker
                    picker_field.datepicker({
                        beforeShowDay: unavailable,
                        minDate: min_date, // min_date
                        dateFormat: 'dd/mm/yy'
                    });
                }

                function unavailable(date) {
                    // date as str
                    dmy = date.getDate() + '-' + (date.getMonth() + 1) + '-' + date.getFullYear();
                    // check holidays input
                    if ($.inArray(dmy, holidays) != -1) {
                        return [false, '', 'Unavailable'];
                    } else {
                        return disabledays(date);
                    }
                }

                function disabledays(date) {
                    var day = date.getDay();
                    // exclude days of week
                    if(day == 0 && $.inArray(day, days_array) == -1) { return [true] }
                    if(day == 1 && $.inArray(day, days_array) == -1) { return [true] }
                    if(day == 2 && $.inArray(day, days_array) == -1) { return [true] }
                    if(day == 3 && $.inArray(day, days_array) == -1) { return [true] }
                    if(day == 4 && $.inArray(day, days_array) == -1) { return [true] }
                    if(day == 5 && $.inArray(day, days_array) == -1) { return [true] }
                    if(day == 6 && $.inArray(day, days_array) == -1) { return [true] }

                    return [false]
                }

                country_select.on('change', function() {
                    //console.log($(this).val());
                    picker_field.datepicker('destroy');
                    init_date_picker();
                    picker_field.datepicker('setDate', null);
                    picker_field.datepicker('refresh');
                });

                init_date_picker();
            });
        </script>
    {% endif %}
{% endblock %}
